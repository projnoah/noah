{"version":3,"names":[],"mappings":"","sources":["dashboard.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n$(function () {\n    // Panel Control\n    $('.panel-collapse').click(function () {\n        $(this).closest(\".panel\").children('.panel-body').slideToggle('fast');\n    });\n\n    $('.panel-reload').click(function () {\n        var el = $(this).closest(\".panel\").children('.panel-body');\n        blockUI(el);\n        window.setTimeout(function () {\n            unblockUI(el);\n        }, 1000);\n    });\n\n    $('.panel-remove').click(function () {\n        $(this).closest(\".panel\").hide();\n    });\n\n    // Slimscroll\n    $('.slimscroll').slimscroll({\n        allowPageScroll: true\n    });\n\n    // Uniform\n    var checkBox = $(\"input[type=checkbox]:not(.switchery), input[type=radio]:not(.no-uniform)\");\n    if (checkBox.length > 0) {\n        checkBox.each(function () {\n            $(this).uniform();\n        });\n    }\n\n    Admin.$compile(document.querySelector('body'));\n});\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"./all\");\n\n$(document).ready(function () {\n\n    // CounterUp Plugin\n    $('.counter').counterUp({\n        delay: 3,\n        time: 450\n    });\n\n    var flot2 = function flot2() {\n\n        // We use an inline data source in the example, usually data would\n        // be fetched from a server\n\n        var data = [],\n            totalPoints = 100;\n\n        function getRandomData() {\n\n            if (data.length > 0) data = data.slice(1);\n\n            // Do a random walk\n\n            while (data.length < totalPoints) {\n\n                var prev = data.length > 0 ? data[data.length - 1] : 50,\n                    y = prev + Math.random() * 10 - 5;\n\n                if (y < 0) {\n                    y = 0;\n                } else if (y > 100) {\n                    y = 100;\n                }\n\n                data.push(y);\n            }\n\n            // Zip the generated y values with the x values\n\n            var res = [];\n            for (var i = 0; i < data.length; ++i) {\n                res.push([i, data[i]]);\n            }\n\n            return res;\n        }\n\n        var plot2 = $.plot(\"#flotchart2\", [getRandomData()], {\n            series: {\n                shadowSize: 0 // Drawing is faster without shadows\n            },\n            yaxis: {\n                min: 0,\n                max: 100\n            },\n            xaxis: {\n                show: false\n            },\n            colors: [\"#22BAA0\"],\n            legend: {\n                show: false\n            },\n            grid: {\n                color: \"#AFAFAF\",\n                hoverable: true,\n                borderWidth: 0,\n                backgroundColor: '#FFF'\n            },\n            tooltip: true,\n            tooltipOpts: {\n                content: \"Y: %y\",\n                defaultTheme: false\n            }\n        });\n\n        function update() {\n            plot2.setData([getRandomData()]);\n\n            plot2.draw();\n            setTimeout(update, 30);\n        }\n\n        update();\n    };\n\n    flot2();\n    var flot1 = function flot1() {\n        var data = [[0, 65], [1, 59], [2, 80], [3, 81], [4, 56], [5, 55], [6, 40]];\n        var data2 = [[0, 28], [1, 48], [2, 40], [3, 19], [4, 86], [5, 27], [6, 90]];\n        var dataset = [{\n            data: data,\n            color: \"rgba(220,220,220,1)\",\n            lines: {\n                show: true,\n                fill: 0.2\n            },\n            shadowSize: 0\n        }, {\n            data: data,\n            color: \"#fff\",\n            lines: {\n                show: false\n            },\n            points: {\n                show: true,\n                fill: true,\n                radius: 4,\n                fillColor: \"rgba(220,220,220,1)\",\n                lineWidth: 2\n            },\n            curvedLines: {\n                apply: false\n            },\n            shadowSize: 0\n        }, {\n            data: data2,\n            color: \"rgba(34,186,160,1)\",\n            lines: {\n                show: true,\n                fill: 0.2\n            },\n            shadowSize: 0\n        }, {\n            data: data2,\n            color: \"#fff\",\n            lines: {\n                show: false\n            },\n            curvedLines: {\n                apply: false\n            },\n            points: {\n                show: true,\n                fill: true,\n                radius: 4,\n                fillColor: \"rgba(34,186,160,1)\",\n                lineWidth: 2\n            },\n            shadowSize: 0\n        }];\n\n        var ticks = [[0, \"1\"], [1, \"2\"], [2, \"3\"], [3, \"4\"], [4, \"5\"], [5, \"6\"], [6, \"7\"], [7, \"8\"]];\n\n        var plot1 = $.plot(\"#flotchart1\", dataset, {\n            series: {\n                color: \"#14D1BD\",\n                lines: {\n                    show: true,\n                    fill: 0.2\n                },\n                shadowSize: 0,\n                curvedLines: {\n                    apply: true,\n                    active: true\n                }\n            },\n            xaxis: {\n                ticks: ticks\n            },\n            legend: {\n                show: false\n            },\n            grid: {\n                color: \"#AFAFAF\",\n                hoverable: true,\n                borderWidth: 0,\n                backgroundColor: '#FFF'\n            },\n            tooltip: true,\n            tooltipOpts: {\n                content: \"%yK\",\n                defaultTheme: false\n            }\n        });\n    };\n\n    flot1();\n\n    $(\".live-tile\").liveTile();\n    $(document).on('pjax:beforeReplace', function () {\n        $(\".live-tile\").liveTile(\"destroy\");\n    });\n});\n\n},{\"./all\":1}]},{},[2]);\n"],"file":"dashboard.js","sourceRoot":"/source/"}