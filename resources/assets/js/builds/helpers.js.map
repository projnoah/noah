{"version":3,"names":[],"mappings":"","sources":["helpers.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\n/*\n |------------------------------------------------------------\n | Helpers\n |------------------------------------------------------------\n |\n | @project Project Noah\n | @author Cali\n */\nvar Noah = {\n    /**\n     * Display an error alert.\n     * 显示失败提示框\n     *\n     * @param title\n     * @param message\n     */\n    displayErrorAlert: function displayErrorAlert(title, message) {\n        swal({\n            title: title,\n            text: message,\n            type: \"error\",\n            timer: 2500,\n            showConfirmButton: false\n        });\n    },\n    /**\n     * Display a success alert.\n     * 显示成功提示框\n     *\n     * @param title\n     * @param message\n     */\n    displaySuccessAlert: function displaySuccessAlert(title, message) {\n        swal({\n            title: title,\n            text: message,\n            type: \"success\",\n            timer: 2500,\n            showConfirmButton: false\n        });\n    },\n    displayAvatarNotification: function displayAvatarNotification(message) {\n        var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\n        var notification = new NotificationFx({\n            message: \"<div class=\\\"ns-thumb\\\"><img src=\\\"\" + User.avatarUrl + \"\\\"/></div><div class=\\\"ns-content\\\"><p>\" + message + \"</p></div>\",\n            layout: 'other',\n            ttl: 4000,\n            effect: 'thumbslider',\n            type: 'notice',\n            onClose: callback\n        });\n        notification.show();\n    },\n    /**\n     * Display notification on top\n     * 顶部显示提醒\n     *\n     * @param message {string}\n     * @param callback {function}\n     * @author Cali\n     */\n    displayTopBarNotification: function displayTopBarNotification(message) {\n        var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\n        var notification = new TopBarNotify(\"<span class=\\\"fa fa-times\\\"></span><p>\" + message + \"</p>\", 'warning', callback());\n        notification.display();\n    }\n};\n// Add to global namespace\nwindow.Noah = Noah;\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\n(function () {\n    // Enable pusher logging - don't include this in production\n    // Pusher.log = function(message) {\n    //     if (window.console && window.console.log) {\n    //         window.console.log(message);\n    //     }\n    // };\n    //\n    // const pusher = new Pusher('d9e732f47ac49ae33a8a', {\n    //     encrypted: true\n    // });\n    //\n    // let channel = pusher.subscribe('post');\n    // channel.bind('BroadcastTestEvent', function(data) {\n    //     console.log(data);\n    // });\n})();\n\n},{}]},{},[1,2]);\n"],"file":"helpers.js","sourceRoot":"/source/"}